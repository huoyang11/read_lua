define plua_Tval
if $argc != 1
    p "参数数目错误,{plua_Tval TValue *}"
end
p print_value($arg0)
end

define plua_Ttable
if $argc != 2
    p "参数数目错误,{plua_Ttable lua_State *, TValue *}"
end
printf "%s",print_table($arg0,hvalue($arg1))
end

define plua_table
if $argc != 2
    p "参数数目错误,{plua_table lua_State *, Table *}"
end
printf "%s",print_table($arg0,$arg1)
end

define plua_str
if $argc != 1
    p "参数数目错误,{plua_str TString *}"
end
p (char *)(((TString *)$arg0)->contents)
end

define plua_code
if $argc != 3
    p "参数数目错误,{plua_code lua_State *, Proto *,int}"
end
printf "%s",PrintCode($arg0,$arg1,$arg2)
end

define plua_lscode
if $argc != 1
    p "参数数目错误,{plua_lscode LexState *}"
end
plua_code $arg0->L $arg0->fs.f $arg0->fs.pc
end

define plua_fscode
if $argc != 1
    p "参数数目错误,{plua_lscode FuncState *}"
end
plua_code $arg0->ls->L $arg0->f $arg0->pc
end

define plua_token
if $argc != 1
    p "参数数目错误,{plua_token LexState *}"
end
p print_token($arg0->t.token)
end

define plua_tokens
if $argc != 1
    p "参数数目错误,{plua_tokens LexState *}"
end
printf "%s",print_tokens($arg0)
end

define plua_gclist
if $argc != 1
    p "参数数目错误,{plua_grays GCObject *}"
end
printf "%s",print_lists($arg0)
end

define plua_gcnextlist
if $argc != 1
    p "参数数目错误,{plua_grays GCObject *}"
end
printf "%s",print_nextlists($arg0)
end

define plua_grays
if $argc != 1
    p "参数数目错误,{plua_grays global_State *}"
end
printf "%s",print_lists($arg0->gray)
end

define plua_allgc
if $argc != 1
    p "参数数目错误,{plua_grays global_State *}"
end
printf "%s",print_nextlists($arg0->allgc)
end

define plua_grayagain
if $argc != 1
    p "参数数目错误,{plua_grays global_State *}"
end
printf "%s",print_lists($arg0->grayagain)
end

define plua_weak
if $argc != 1
    p "参数数目错误,{plua_grays global_State *}"
end
printf "%s",print_lists($arg0->weak)
end

define plua_allweak
if $argc != 1
    p "参数数目错误,{plua_grays global_State *}"
end
printf "%s",print_lists($arg0->allweak)
end